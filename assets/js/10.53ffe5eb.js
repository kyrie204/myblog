(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{895:function(t,s,a){"use strict";a.r(s);var e=a(119),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("在我们项目开发中，总会遇到许许多多的水平或者垂直居中问题，这是我在敲代码的时候总结的一些小技巧，以便自己后面的开发学习。")]),t._v(" "),a("h2",{attrs:{id:"居中问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#居中问题"}},[t._v("#")]),t._v(" 居中问题")]),t._v(" "),a("p",[t._v("如果是块级元素，我们可以给块级元素设置一个宽度，然后利用margin:0 auto对其进行水平居中，这算是比较常见的一种；如果是行内元素，可以直接使用text-align:center进行居中。\n"),t._v("\n另外一种用的方法就是绝对定位。通过父元素设置相对定位，子元素设置为绝对定位，然后对子元素进行left：0; top: 0; right: 0; bottom: 0; 接下来是最重要的一点就是 "),a("code",[t._v("margin:0 auto;")]),t._v("便可以通过这种方式实现居中。代码如下:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\n    .center")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n")])])]),a("p",[t._v("但是这样的方式在IE7下是不能生效的。那么用另一种方式实现居中\n解决： 使用另一种方法，"),a("code",[t._v("top : 50%, left: 50%, transform: translate(-50%,-50%);")]),t._v(" 成功的实现了兼容。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\n    .center")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 350px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("-50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n")])])]),a("p",[t._v("还有一种就是利用的表格的属性进行居中。")]),t._v(" "),a("h2",{attrs:{id:"flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[t._v("#")]),t._v(" flex布局")]),t._v(" "),a("p",[t._v("最后这里要介绍的就是利用css3.0的样式，flex布局进行居中:传统的布局方式有三种，哪三种呢：那么分别就是display，position和float，传统的布局方式有个明显缺点，那就是垂直居中不易实现，所以我们就想到了弹性盒子，也就是flex布局，flex布局可以更好地实现响应式布局。\n任何容器都可以使用flex布局，一旦父元素成为了flex布局，那么它的子元素也就自动成为了容器的成员，也就是flex项目。Flex容器默认存在2根轴线（水平主轴和垂直交叉轴）,布局就是根据这2根轴来排列项目显示的。\n块级元素：display:flex;\n内联元素：display:inlne-flex;\n注意：使用了flex布局后，项目的float、clear、vertical-align都将失去效果。")]),t._v(" "),a("h3",{attrs:{id:"flex容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex容器属性"}},[t._v("#")]),t._v(" flex容器属性")]),t._v(" "),a("p",[t._v("总共有六个属性：")]),t._v(" "),a("h4",{attrs:{id:"_1-flex-direction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-flex-direction"}},[t._v("#")]),t._v(" 1.flex-direction")]),t._v(" "),a("p",[t._v("设置主轴的方向，默认为水平，从左至右。它的值有四个：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-flex-wrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-wrap"}},[t._v("#")]),t._v(" 2.flex-wrap")]),t._v(" "),a("p",[t._v("设置项目是否换行排列。\nnowrap（默认值）：不换行。\nwrap：换行，第一行在上方。\nwrap-reverse：换行，第一行在下方。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-justify-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-justify-content"}},[t._v("#")]),t._v(" 3.justify-content")]),t._v(" "),a("p",[t._v("设置项目的水平对齐方式。\nflex-start（默认值）：左对齐\nflex-end：右对齐\ncenter： 居中\nspace-between：两端对齐，项目之间的间隔都相等。\nspace-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-align-items"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-align-items"}},[t._v("#")]),t._v(" 4.align-items")]),t._v(" "),a("p",[t._v("设置项目垂直方向对齐方式。\nflex-start：交叉轴的起点对齐。\nflex-end：交叉轴的终点对齐。\ncenter：交叉轴的中点对齐。\nbaseline: 项目的第一行文字的基线对齐。\nstretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-align-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-align-content"}},[t._v("#")]),t._v(" 5.align-content")]),t._v(" "),a("p",[t._v("当项目定义了横竖2根轴的时候生效，相当于justify-content和align-items的简写。")]),t._v(" "),a("h4",{attrs:{id:"_6-flex-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-flex-flow"}},[t._v("#")]),t._v(" 6.flex-flow")]),t._v(" "),a("p",[t._v("flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <flex-direction> || <flex-wrap>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"flex项目属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex项目属性"}},[t._v("#")]),t._v(" flex项目属性")]),t._v(" "),a("h4",{attrs:{id:"_1-order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-order"}},[t._v("#")]),t._v(" 1.order")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <integer>\n")])])]),a("p",[t._v("定义项目的排列顺序，值越小越考前，默认为0。")]),t._v(" "),a("h4",{attrs:{id:"_2-flex-grow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-grow"}},[t._v("#")]),t._v(" 2.flex-grow")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("定义项目的放大比例，默认为0（不放大）。")]),t._v(" "),a("h4",{attrs:{id:"_3-flex-shrink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-flex-shrink"}},[t._v("#")]),t._v(" 3.flex-shrink")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("定义项目的缩小比例，默认为1，如果空间不足湘江将自动缩小。")]),t._v(" "),a("h4",{attrs:{id:"_4-flex-basis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-flex-basis"}},[t._v("#")]),t._v(" 4.flex-basis")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("定义项目主轴空间，相当于设置width，默认为auto。")]),t._v(" "),a("h4",{attrs:{id:"_5-align-self"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-align-self"}},[t._v("#")]),t._v(" 5.align-self")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto | flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("定义项目的对齐方式。可覆盖align-items。默认值：auto。")]),t._v(" "),a("h4",{attrs:{id:"_6-flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-flex"}},[t._v("#")]),t._v(" 6.flex")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | [ <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-grow'")]),t._v("> <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-shrink'")]),t._v(">? || <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-basis'")]),t._v("> ]\n")])])]),a("p",[t._v("flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。")])])}),[],!1,null,null,null);s.default=n.exports}}]);